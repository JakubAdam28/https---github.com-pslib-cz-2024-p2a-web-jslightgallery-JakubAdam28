import { DependencyList } from 'react';
import { Property } from 'csstype';
export type JSSwiperData = {
    image: string;
    order: number;
    /** image styles */
    backgroundColor?: Property.BackgroundColor;
    objectFit?: Property.ObjectFit;
} & ({
    link: string;
    newTab?: boolean;
} | {
    link?: never;
    newTab?: never;
});
type JSSwiperProps<T, U, V> = {
    items: T[];
    /** millisecond */
    duration?: number;
    /** rolling interval */
    interval?: number;
    stateButton?: V;
    onChangeItem?: (item: T) => void;
    onChangeState?: (state: 'play' | 'pause') => void;
    /** bug fix */
    startEffect?: 'useEffectOnce' | ((callback: React.EffectCallback, dependencyList: DependencyList | undefined) => void);
} & ({
    prevButton: U;
    nextButton: U;
} | {
    prevButton?: null;
    nextButton?: null;
}) & ({
    width: number;
    height: number;
} | {
    width?: never;
    height?: never;
});
declare const JSSwiper: <T extends JSSwiperData, U extends import("react").MutableRefObject<HTMLButtonElement | null>, V extends import("react").MutableRefObject<HTMLButtonElement | null>>({ items, prevButton, nextButton, stateButton, duration, interval, onChangeItem: handleChangeItem, onChangeState: handleChangeState, width, height, startEffect, }: JSSwiperProps<T, U, V>) => import("react/jsx-runtime").JSX.Element | null;
export default JSSwiper;
